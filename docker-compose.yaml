version: '3'

services:
  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - GENERIC_TIMEZONE=Europe/Moscow
      #- TZ=Europe/Moscow
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_SCHEMA=internal
      - DB_POSTGRESDB_USER=developer
      - DB_POSTGRESDB_PASSWORD=developer
      - N8N_SECURE_COOKIE=false
    extra_hosts:
      - host.docker.internal:host-gateway

  postgres:
    platform: linux/x86_64
    image: postgres:15.3-alpine
    restart: unless-stopped
    environment:
      PGDATA: "/var/lib/postgresql/data/pgdata"
      POSTGRES_DB: n8n
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: developer
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U developer -d n8n" ]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:alpine
    restart: unless-stopped
  mongo:
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: minecraft
  db:
    image: yaliilyaya2/symfony6-skeleton-db:latest
    build:
      context: dockerfile/db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: app
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./data/mysql:/var/lib/mysql:rw
      - ./data/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d